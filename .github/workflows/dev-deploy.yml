name: Deploy to GitHub Actions

on:
  push:
    branches:
      - "develop"

permissions:
  contents: read

jobs:

  deploy:

    name: Deployment
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_USER: ${{ secrets.SQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306
        
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v1

      - name: Verificando coneci√≥n a la DB
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"${{ secrets.SQL_PORT_HOST }}" --silent; do
            sleep 1
          done 

      - uses: actions/checkout@v3.1.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup test database
        run: |
          export SECRET_KEY=test-secret-key
          export DEBUG=${{ secrets.DEBUG }}
      - name: Run migrations
        run: |
          export SECRET_KEY=test-secret-key
          export DEBUG=${{ secrets.DEBUG }}
          export ALLOWED_HOSTS=localhost
          export GITHUB_WORKFLOW=True
          python manage.py makemigrations
          python manage.py migrate
          python manage.py migrate --run-syncdb
          python manage.py check

      - uses: actions/checkout@v3.1.0
      - name: Build the images and start the containers
        run: |
          export GITHUB_WORKFLOW=True
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml up -d

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down